#include<bits/stdc++.h>
using namespace std;

vector<int> spiralOrder(vector<vector<int>>& matrix) {
    vector<int> ans;
    int m = matrix.size();
    if(m == 0) return ans;
    int n = matrix[0].size();
    int total_element = m * n;
    int startingRow = 0;
    int endingCol = n - 1;
    int endingRow = m - 1;
    int startingCol = 0;
    int count = 0;

    while (count < total_element) {
        // print startingRow
        for (int i = startingCol; i <= endingCol && count < total_element; i++) {
            cout<<matrix[startingRow][i]<<" ";
            count++;
        }
        startingRow++;

        // print endingCol
        for (int i = startingRow; i <= endingRow && count < total_element; i++) {
            cout<<matrix[i][endingCol]<<" ";
            count++;
        }
        endingCol--;

        // print endingRow
        for (int r = endingCol; r >= startingCol && count < total_element; r--) {
            cout<<matrix[endingRow][r]<<" ";
            count++;
        }
        endingRow--;

        // print startingCol
        for (int i = endingRow; i >= startingRow && count < total_element; i--) {
            cout<<matrix[i][startingCol]<<" ";
            count++;
        }
        startingCol++;
    }

    return ans;
}

int main() {
    vector<vector<int>> matrix = {
        {1, 2, 3},
        {8,9,4},
        {7, 6, 5}
    };

    vector<int> result = spiralOrder(matrix);

    for (int i = 0; i < result.size(); i++) {
        cout << result[i] << " ";
    }

    return 0;
}
